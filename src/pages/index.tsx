import type { NextPage } from 'next'
import Head from 'next/head'
import axios from 'axios'
import { ContactsGetModel } from '../models'
import {
  Avatar,
  IconButton,
  List,
  ListItem,
  ListItemAvatar,
  ListItemText,
  Pagination,
  Stack,
} from '@mui/material'
import { useState } from 'react'
import DeleteIcon from '@mui/icons-material/Delete'
import AccountCircleIcon from '@mui/icons-material/AccountCircle'
import EditIcon from '@mui/icons-material/Edit'
import Link from 'next/link'

const Home: NextPage<ContactsGetModel> = (props) => {
  const [contacts, setContacts] = useState(props.results)

  const fetchContactsPerPage = async (page: number) => {
    const data: ContactsGetModel = await axios
      .get(process.env.NEXT_PUBLIC_API! + `?page=${page}&perPage=10`)
      .then((response) => {
        return response.data
      })

    setContacts(data.results)
  }

  return (
    <>
      <Head>
        <title>Read</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <nav aria-label="secondary mailbox folders">
        <List>
          {contacts.map((contact, index) => (
            <ListItem
              key={index}
              secondaryAction={
                <>
                  <IconButton edge="end" aria-label="delete">
                    <Link
                      href={{
                        pathname: '/contacts/[id]/update',
                        query: { id: contact.id },
                      }}
                    >
                      <EditIcon />
                    </Link>
                  </IconButton>
                  <IconButton edge="end" aria-label="delete">
                    <Link
                      href={{
                        pathname: '/contacts/[id]/delete',
                        query: { id: contact.id },
                      }}
                    >
                      <DeleteIcon />
                    </Link>
                  </IconButton>
                </>
              }
            >
              <ListItemAvatar>
                <Avatar>
                  <AccountCircleIcon />
                </Avatar>
              </ListItemAvatar>
              <ListItemText
                style={{ marginRight: '50px' }}
                primary={`${contact.firstName} ${contact.lastName}`}
              />
            </ListItem>
          ))}
        </List>
      </nav>

      <Stack spacing={2}>
        <Pagination
          data-testid="pagination"
          count={props.totalPages}
          onChange={(e, page) => fetchContactsPerPage(page)}
        />
      </Stack>
    </>
  )
}

export async function getServerSideProps() {
  const data: ContactsGetModel = await axios
    .get(process.env.NEXT_PUBLIC_API!)
    .then((response) => {
      return response.data
    })

  return {
    props: {
      count: data.count,
      perPage: data.perPage,
      currentPage: data.currentPage,
      totalPages: data.totalPages,
      results: data.results,
    },
  }
}

export default Home
